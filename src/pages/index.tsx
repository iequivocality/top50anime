import Head from "next/head";
import type { GetServerSideProps } from "next";
import cheerio from "cheerio";
import type { Anime } from "~/types";
import Image from "next/image";
import { useState } from "react";
import { cn } from "~/utils";

interface HomeProps {
  rankings: Anime[]
}

interface TenAnimeProps {
  rankings: Anime[],
  onSelect: (index : number) => void,
  firstIndex: number,
  selectedAnime: number[]
}

function TenAnime({ rankings, onSelect, firstIndex, selectedAnime } : TenAnimeProps) {
  return (
    <div className="flex flex-col lg:w-[20%]">
      {
        rankings.map((ranking) => {
          return (
            <div
              key={`topanime_${ranking.rank}`}
              className={cn("flex max-h-[90px] mb-4 rounded-sm p-2 mx-2", selectedAnime.find(sa => sa === ranking.rank) ? "outline outline-2 outline-white" : "" )}
              onClick={() => { onSelect(ranking.rank) }}>
              <div className="flex justify-center w-4 items-center mr-2 font-bold">
                {ranking.rank}
              </div>
              <Image src={ranking.imageUrl} alt={ranking.title} width={50} height={70}></Image>
              <div className="max-w-full leading-0 text-xs ml-2 break-words">
                {ranking.title}
              </div>
            </div>
          );
        })
      }
    </div>
  );
}

export default function Home({ rankings } : HomeProps) {
  const [ selectedAnime, setSelectedAnime ] = useState<number[]>([]);
  const onSelect = (index: number) => {
    const isSelected = selectedAnime.findIndex(sa => sa === index);
    if (isSelected > -1) {
      setSelectedAnime(sa => sa.filter(n => n !== index));
    } else {
      setSelectedAnime(sa => [...sa, index])
    }
  };

  const first10 = rankings.slice(0, 10);
  const second10 = rankings.slice(10, 20);
  const third10 = rankings.slice(20, 30);
  const fourth10 = rankings.slice(30, 40);
  const last10 = rankings.slice(40);

  return (
    <>
      <Head>
        <title>MyAnimelist Top 50</title>
        <meta name="description" content="Generated by create-t3-app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className="flex min-h-screen flex-col items-center justify-center bg-gradient-to-b from-[#2e026d] to-[#15162c] text-white">
        <div>
          I have seen {selectedAnime.length}/50 top anime on MyAnimelist
        </div>
        <div className="flex flex-col lg:flex-row w-[90%] lg:w-[85%]">
          <TenAnime rankings={first10} onSelect={onSelect} firstIndex={0} selectedAnime={selectedAnime}/>
          <TenAnime rankings={second10} onSelect={onSelect} firstIndex={10} selectedAnime={selectedAnime}/>
          <TenAnime rankings={third10} onSelect={onSelect} firstIndex={20} selectedAnime={selectedAnime}/>
          <TenAnime rankings={fourth10} onSelect={onSelect} firstIndex={30} selectedAnime={selectedAnime}/>
          <TenAnime rankings={last10} onSelect={onSelect} firstIndex={40} selectedAnime={selectedAnime}/>
        </div>
      </main>
    </>
  );
}

export const getServerSideProps: GetServerSideProps<{rankings: Anime[]}> = async () => {
  const res = await fetch("https://myanimelist.net/topanime.php");
  const html = await res.text();
  const $ = cheerio.load(html);
  const mapped: Anime[] = [];
  const rankingsList = $("table.top-ranking-table .ranking-list");
  rankingsList.each((_index, element) => {
    const titleElement = $(element).find("a.hoverinfo_trigger");
    const rankElement = $(element).find(".top-anime-rank-text");
    const imageElement = titleElement.children("img");
    mapped.push({
      title: titleElement.text().replaceAll("\n", "").trim(),
      url: titleElement.attr('href') ?? '',
      rank: parseInt(rankElement.text()),
      imageUrl: imageElement.attr('data-src') ?? ''
    });
  });

  return {
    props: {
      rankings: mapped,
    },
  };
};
